name: Deploy Lambda Functions

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # --- 스크래핑 함수 배포 ---
    - name: Package Scraping Lambda Function
      working-directory: scraping_function
      run: |
        mkdir -p package
        # 볼륨 마운트 경로 수정
        docker run --rm -v "$PWD":/var/task public.ecr.aws/sam/build-python3.10 pip install -r requirements.txt -t package
        cp lambda_function.py package/
        cd package
        zip -r ../scraping_package.zip .
        cd ..
    
    - name: Deploy Scraping Lambda Function
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SCRAPING_FUNCTION_NAME: ${{ secrets.SCRAPING_FUNCTION_NAME }}
      run: |
        aws lambda update-function-code \
          --function-name $SCRAPING_FUNCTION_NAME \
          --zip-file fileb://scraping_function/scraping_package.zip \
          --region $AWS_REGION

    # --- 리프레시 함수 배포 ---
    - name: Package Refresh Lambda Function
      working-directory: refresh_function
      run: |
        mkdir -p package
        # 볼륨 마운트 경로 수정
        docker run --rm -v "$PWD":/var/task public.ecr.aws/sam/build-python3.10 pip install -r requirements.txt -t package
        cp lambda_function.py package/
        cd package
        zip -r ../refresh_package.zip .
        cd ..
    
    - name: Deploy Refresh Lambda Function
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        REFRESH_FUNCTION_NAME: ${{ secrets.REFRESH_FUNCTION_NAME }}
      run: |
        aws lambda update-function-code \
          --function-name $REFRESH_FUNCTION_NAME \
          --zip-file fileb://refresh_function/refresh_package.zip \
          --region $AWS_REGION
